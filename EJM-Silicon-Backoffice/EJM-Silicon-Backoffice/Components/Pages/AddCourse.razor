@page "/courses/addcourse"
@using Microsoft.AspNetCore.Authorization
@using EJMSiliconBackoffice.Models
@using System.Text.Json
@using System.Net.Http.Json
@using System.Text

@inject HttpClient Http
@inject NavigationManager NavigationManager

@* @attribute [Authorize] *@

<EditForm FormName="AddCourse" Model="newCourse" OnValidSubmit="AddCourseAsync">
    <div class="form-group">
        <label for="title">Title:</label>
        <InputText class="form-course" id="title" @bind-Value="newCourse.Title" required />
    </div>

    <div class="form-group form-check">
        <InputCheckbox class="form-check-input" id="isBestSeller" @bind-Value="newCourse.IsBestSeller" />
        <label class="form-check-label" for="isBestSeller">Is Best Seller</label>
    </div>

    <div class="form-group form-check">
        <InputCheckbox class="form-check-input" id="isDigital" @bind-Value="newCourse.IsDigital" />
        <label class="form-check-label" for="isDigital">Is Digital</label>
    </div>

    <button type="submit" class="btn-addcourse">Add Course</button>
</EditForm>

@code {
    private AddAndEditCourseModel newCourse { get; set;} = new AddAndEditCourseModel();  
    private string? errorMessage { get; set; }

    private async Task AddCourseAsync()
    {
        var mutation = new
        {
            query = @"
            mutation($course: CourseCreateRequestInput!) {
                createCourse(input: $course) {
                    title
                    isDigital
                    isBestSeller
                }
            }",
            variables = new
            {
                course = new
                {
                    title = newCourse.Title,
                    isDigital = newCourse.IsDigital,
                    isBestSeller = newCourse.IsBestSeller
                }
            }
        };

        var content = new StringContent(JsonSerializer.Serialize(mutation), Encoding.UTF8, "application/json");

        try
        {
            var response = await Http.PostAsync("https://courseprovider-ejm.azurewebsites.net/api/graphql?code=WFw9JlFcINQqtM1YeOLUAd6wpm5rJ8i5ajIxp__0mVnUAzFuengWgw%3D%3D", content);

            if (response.IsSuccessStatusCode)
            {
                NavigationManager.NavigateTo("/courses");
            }
            else
            {
                var errorResponse = await response.Content.ReadAsStringAsync();
                errorMessage = $"There was an error adding the course: {errorResponse}";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Exception: {ex.Message}";
        }
    }
}
