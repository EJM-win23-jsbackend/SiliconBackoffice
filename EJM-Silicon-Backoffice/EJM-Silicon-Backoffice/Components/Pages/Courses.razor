@using EJMSiliconBackoffice.Services
@using EJMSiliconBackoffice.ViewModels
@using global::Data.Entities
@inject CourseServices _services

@page "/courses"

<section id="courses" class="container">

    <div class="courses">

    <div class="createNewCourseContainer">
        <a class="Mybtn btn-theme-s" href="/addcourse">Create A New Course</a>
    </div>


    <div class="headlineCourses">
        <h1>Courses</h1>

        @*  @if (TempData["SuccessMessage"] != null)
        {
            <div class="success center">@TempData["SuccessMessage"]</div>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="error center">@TempData["ErrorMessage"]</div>
        } *@

        <div class="search-container">
        
        @if(Model != null)
        {
                <div class="dropdown">
                    <button class="My btn btn-transparent dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Categories
                    </button>
                    <ul class="dropdown-menu">
                        <li class="li-options">
                            <a asp-controller="Courses" asp-action="Index" class="dropdown-item">All Categories</a>
                        </li>
                        @foreach (var category in Model.Categories)
                        {
                            @* Med asp-route-category skapar du en slut-del på url och en unik query med "categoryId" *@
                            <li class="li-options">
                                <NavLink href="#" asp-route-category="@category.Id" class="dropdown-item">@category.CategoryName</NavLink>
                            </li>
                        }
                    </ul>
                </div>
        }

            <form asp-controller="Courses" asp-action="Index" method="get" class="search-container">
                <div class="input">
                    <input id="search" name="search" placeholder="Serach courses" />
                    <i class="fa-solid fa-magnifying-glass"></i>
                </div>
                <button type="submit" class="Mybtn btn-theme">Search</button>
            </form>

        </div>
    </div>

    <div class="course-container">
        @if(Model.Courses != null)
        {
            @foreach (var course in Model.Courses)
            {
                <div class="courses-boxes">
                    <div class="imageContainer">
                        <img class="image" src="@course.ImageUrl" alt="@course.ImageALtText" />

                        @if (@course.IsBestseller == true)
                        {
                            <div class="best-seller-container">
                                <div class="best-seller"><label asp-for="@course.IsBestseller">Best Seller</label></div>
                            </div>

                        }
                    </div>
                    <div class="text-container">
                        <NavLink class="a-title" href="@($"course_details/{course.Id}")"><h5 class="h5">@course.Title</h5></NavLink>
                        <p class="p">By @course.Author</p>
                        <div class="price-container">
                            <h6 class="@(course.DiscountPrice != null ? "red" : "price")">$@course.Price</h6>

                            @if (course.DiscountPrice != null)
                            {
                                <p class="discount-price">
                                    $@course.DiscountPrice
                                </p>
                            }

                        </div>
                        <hr class="hr" />
                        <div class="timeAndLikesParent">
                            <div class="timeAndLikesChild">
                                <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M9.99996 1.66675C5.40496 1.66675 1.66663 5.40508 1.66663 10.0001C1.66663 14.5951 5.40496 18.3334 9.99996 18.3334C14.595 18.3334 18.3333 14.5951 18.3333 10.0001C18.3333 5.40508 14.595 1.66675 9.99996 1.66675ZM9.99996 16.6667C6.32413 16.6667 3.33329 13.6759 3.33329 10.0001C3.33329 6.32425 6.32413 3.33341 9.99996 3.33341C13.6758 3.33341 16.6666 6.32425 16.6666 10.0001C16.6666 13.6759 13.6758 16.6667 9.99996 16.6667Z" fill="#9397AD" />
                                    <path d="M10.8333 5.83325H9.16663V10.3449L11.9108 13.0891L13.0891 11.9108L10.8333 9.65492V5.83325Z" fill="#9397AD" />
                                </svg>
                                <p class="p">@course.Hours</p>
                            </div>
                            <div class="timeAndLikesChild">
                                <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M16.6666 6.66675H11.99L12.9258 3.86091C13.0941 3.35425 13.0091 2.79258 12.6966 2.35925C12.3841 1.92591 11.8775 1.66675 11.3433 1.66675H9.99996C9.75246 1.66675 9.51829 1.77675 9.35913 1.96675L5.44246 6.66675H3.33329C2.41413 6.66675 1.66663 7.41425 1.66663 8.33341V15.8334C1.66663 16.7526 2.41413 17.5001 3.33329 17.5001H5.83329H14.4225C15.1133 17.5001 15.74 17.0659 15.9833 16.4184L18.2808 10.2926C18.3158 10.1992 18.3333 10.1001 18.3333 10.0001V8.33341C18.3333 7.41425 17.5858 6.66675 16.6666 6.66675ZM3.33329 8.33341H4.99996V15.8334H3.33329V8.33341ZM16.6666 9.84925L14.4225 15.8334H6.66663V7.80175L10.39 3.33341H11.345L10.0433 7.23591C9.95746 7.49008 10.0008 7.76925 10.1575 7.98675C10.3141 8.20508 10.5658 8.33341 10.8333 8.33341H16.6666V9.84925Z" fill="#9397AD" />
                                </svg>
                                <p class="p">@course.LikesInProcent %  (@course.LikesInNumbers K)</p>
                            </div>
                        </div>
                    </div>

                    <div class="endContainer">

                        <button class="Mybtn btn-red" onclick="areYouShureCourses('@course.Id')">Delete</button>

@*                         <div id="areYouShureCourses_@course.Id" class="areYouShureContainer">
                            <p>Are you sure you wish to delete this course?</p>
                            <div class="btnContainer">
                                <form asp-controller="AdminCourses" asp-action="Delete" method="post">
                                    <input type="hidden" name="courseId" value="@course.Id" />
                                    <button type="submit" class="btn-red">Delete</button>
                                </form>
                                <button class="Mybtn btn-theme" onclick="cancelCourses('areYouShureCourses_@course.Id')">Cancel</button>
                            </div>
                        </div> *@

                        <NavLink href="#" asp-route-id="@course.Id" class="Mybtn btn-theme">Edit</NavLink>
                    </div>
                </div>
                }
            }
        else
        {
            <div>
                <p class="error">At the moment there is no courses avaliable...</p>
            </div>
        }
    </div>

@*     <!-- Pagination -->
    <div class="pagination-container">
        <nav aria-label="Page navigation example">
            <ul class="pagination">
                <li class="page-item @Model.CurrentPage == 1 ? " disabled" : "" ">
                    <a class="page-link" href="/admin/courses?pageNumber=@(Model.CurrentPage - 1)" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                        <a class="page-link" href="/admin/courses?pageNumber=@i">@i</a>
                    </li>
                }
                <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                    <a class="page-link" href="/admin/courses?pageNumber=@(Model.CurrentPage + 1)" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            </ul>
        </nav>
    </div> *@

    </div>
</section>

@code {
    private CourseViewModel? Model;


    protected override async Task OnInitializedAsync()
    {
        CourseViewModel Model = await GetCourses();
    }

    private async Task<CourseViewModel> GetCourses()
    {
        List<CourseEntity> courses = await _services.GetAllCoursesAsync();
        List<CategoryEntity> categories = await _services.GetAllCategoriesAsync();

        Model = new CourseViewModel
        {
            Courses = courses,
            Categories = categories
        };

        return Model; 

    }
}
